//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18052
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace IKende.com.SNService
{
    
    
    /// <summary>
    /// The SNServiceSection Configuration Section.
    /// </summary>
    public partial class SNServiceSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the SNServiceSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string SNServiceSectionSectionName = "sNServiceSection";
        
        /// <summary>
        /// Gets the SNServiceSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public static global::IKende.com.SNService.SNServiceSection Instance
        {
            get
            {
                return ((global::IKende.com.SNService.SNServiceSection)(global::System.Configuration.ConfigurationManager.GetSection(global::IKende.com.SNService.SNServiceSection.SNServiceSectionSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::IKende.com.SNService.SNServiceSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::IKende.com.SNService.SNServiceSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Sequence Property
        /// <summary>
        /// The XML name of the <see cref="Sequence"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string SequencePropertyName = "sequence";
        
        /// <summary>
        /// Gets or sets the Sequence.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Sequence.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::IKende.com.SNService.SNServiceSection.SequencePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::IKende.com.SNService.SequenceConf Sequence
        {
            get
            {
                return ((global::IKende.com.SNService.SequenceConf)(base[global::IKende.com.SNService.SNServiceSection.SequencePropertyName]));
            }
            set
            {
                base[global::IKende.com.SNService.SNServiceSection.SequencePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace IKende.com.SNService
{
    
    
    /// <summary>
    /// The SequenceConf Configuration Element.
    /// </summary>
    public partial class SequenceConf : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Start Property
        /// <summary>
        /// The XML name of the <see cref="Start"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string StartPropertyName = "start";
        
        /// <summary>
        /// Gets or sets the Start.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Start.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::IKende.com.SNService.SequenceConf.StartPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=1)]
        public virtual int Start
        {
            get
            {
                return ((int)(base[global::IKende.com.SNService.SequenceConf.StartPropertyName]));
            }
            set
            {
                base[global::IKende.com.SNService.SequenceConf.StartPropertyName] = value;
            }
        }
        #endregion
        
        #region Step Property
        /// <summary>
        /// The XML name of the <see cref="Step"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string StepPropertyName = "step";
        
        /// <summary>
        /// Gets or sets the Step.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Step.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::IKende.com.SNService.SequenceConf.StepPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=1)]
        public virtual int Step
        {
            get
            {
                return ((int)(base[global::IKende.com.SNService.SequenceConf.StepPropertyName]));
            }
            set
            {
                base[global::IKende.com.SNService.SequenceConf.StepPropertyName] = value;
            }
        }
        #endregion
    }
}
