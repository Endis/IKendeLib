<phone:PhoneApplicationPage
    x:Class="BeetleNPDemo.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}"
    SupportedOrientations="Portrait" Orientation="Portrait"
    shell:SystemTray.IsVisible="True">

    <!--LayoutRoot 是包含所有页面内容的根网格-->
    <Grid x:Name="LayoutRoot" Background="Transparent" Loaded="LayoutRoot_Loaded">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- 本地化说明:
            若要本地化显示的字符串，请将其值复制到应用程序的非特定语言资源文件(AppResources.resx)
            中的适当命名的键，然后
            将属性的引号之间的硬编码文本值
            替换为其路径指向该字符串名称的绑定子句。

            例如:

                Text="{Binding Path=LocalizedResources.ApplicationTitle, Source={StaticResource LocalizedStrings}}"

            此绑定指向模板的名为“ApplicationTitle”的字符串资源。

            在“项目属性”选项卡中添加受支持的语言将会为
            每种语言创建一个新的 resx 文件，该文件可以包含 UI 字符串的翻译值
            。这些示例中的绑定将导致在运行时从
            与应用程序的 CurrentUICulture 匹配的 .resx 文件中
            提取属性的值。
         -->

        <!--TitlePanel 包含应用程序的名称和页标题-->
        <StackPanel x:Name="TitlePanel" Grid.Row="0" Margin="12,17,0,28">
            <TextBlock Text="Beetle NetPackage" Style="{StaticResource PhoneTextNormalStyle}" Margin="12,0"/>
            <TextBlock Text=" Demo" Margin="9,-7,0,0" Style="{StaticResource PhoneTextTitle1Style}"/>
        </StackPanel>

        <!--ContentPanel - 在此处放置其他内容-->
        <Grid x:Name="ContentPanel" Grid.Row="1" Margin="12,0,12,0"  >
            <Grid.RowDefinitions>
                <RowDefinition Height="32*"/>
                <RowDefinition Height="32*"/>
                <RowDefinition Height="32*"/>
                <RowDefinition Height="32*"/>
                <RowDefinition Height="32*"/>
                <RowDefinition Height="121*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="60*"/>
                <ColumnDefinition Width="120*"/>
            </Grid.ColumnDefinitions>
            <Grid.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="White" Offset="1"/>
                </LinearGradientBrush>
            </Grid.Background>

            <TextBlock HorizontalAlignment="Right" Margin="0" TextWrapping="Wrap" Text="Name:" VerticalAlignment="Center" Height="27" Width="57"/>
            <TextBox x:Name="txtName" HorizontalAlignment="Left" Height="72" Margin="0,3" TextWrapping="Wrap" VerticalAlignment="Center" Grid.Column="1" Width="190"/>
            <TextBlock HorizontalAlignment="Right" Margin="0" Grid.Row="1" TextWrapping="Wrap" Text="EMail:" VerticalAlignment="Center"/>
            <TextBox x:Name="txtEMail" Grid.Column="1" HorizontalAlignment="Left" Height="72" Margin="0,3" Grid.Row="1" TextWrapping="Wrap" VerticalAlignment="Center" Width="190"/>
            <TextBlock HorizontalAlignment="Right" Margin="0" Grid.Row="2" TextWrapping="Wrap" Text="City:" VerticalAlignment="Center"/>
            <TextBlock HorizontalAlignment="Right" Margin="0" Grid.Row="3" TextWrapping="Wrap" Text="Country:" VerticalAlignment="Center"/>
            <TextBox x:Name="txtCity" HorizontalAlignment="Left" Height="72"  TextWrapping="Wrap" VerticalAlignment="Center" Grid.Row="2" Grid.Column="1" Width="190"/>
            <TextBox x:Name="txtCountry" Grid.Column="1" HorizontalAlignment="Left" Height="72" Margin="0" Grid.Row="3" TextWrapping="Wrap" VerticalAlignment="Top" Width="190"/>
            <Button x:Name="cmdRegister" Content="Register" Grid.Column="1" HorizontalAlignment="Left" Margin="0,66,0,0" Grid.Row="4" VerticalAlignment="Top" Click="cmdRegister_Click" Grid.RowSpan="2"/>
            <TextBlock x:Name="txtStatus" HorizontalAlignment="Left" Margin="55,71,0,0" Grid.Row="5" TextWrapping="Wrap" VerticalAlignment="Top" Grid.ColumnSpan="2" Height="42" Width="319"/>
            <TextBlock x:Name="txtErrors" HorizontalAlignment="Left" Margin="55,127,0,0" Grid.Row="5" TextWrapping="Wrap" VerticalAlignment="Top" Grid.ColumnSpan="2" Height="98" Width="319"/>
            <TextBlock HorizontalAlignment="Right" Margin="0" Grid.Row="4" TextWrapping="Wrap" Text="RegTime:" VerticalAlignment="Center"/>
            <TextBlock x:Name="txtRegtime" Grid.Column="1" HorizontalAlignment="Left" Margin="0" Grid.Row="4" TextWrapping="Wrap" VerticalAlignment="Center"/>
        </Grid>
       

        <!--取消注释，以显示对齐网格，从而帮助确保
            控件在公用边界上对齐。图像在系统栏中显示时的
            上边距为 -32px。如果隐藏了系统栏，则将此值设为 0
            (或完全删除边距)。

            在发送之前删除此 XAML 和图像本身。-->
        <!--<Image Source="/Assets/AlignmentGrid.png" VerticalAlignment="Top" Height="800" Width="480" Margin="0,-32,0,0" Grid.Row="0" Grid.RowSpan="2" IsHitTestVisible="False" />-->
    </Grid>

</phone:PhoneApplicationPage>